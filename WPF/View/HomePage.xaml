<UserControl x:Class="WPF.View.HomePage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:WPF.View"
             xmlns:mD="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}"
             TextElement.FontSize="13"
             TextElement.FontWeight="Regular"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Green.Named.Primary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal">
            <Image Width="400"
                   HorizontalAlignment="Left"
                   Source="/Img/logo-login.png"
                   Stretch="UniformToFill" />
            <StackPanel>
                <TextBlock Margin="20,0,0,0"
                           Style="{StaticResource MaterialDesignHeadline6TextBlock}">
                    Name : Hussein Hayder Mohammed Al-Kahfaji<LineBreak />
                    Student Number : 213720162<LineBreak />
                    Class : ECE525 Artificial Intelligence</TextBlock>
                <TextBlock Margin="20,10,0,0"
                           Foreground="{DynamicResource SecondaryHueLightBrush}"
                           Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                           Text="Using A* For Pathfinding Algorithm &amp; Visualizing The Process" />
            </StackPanel>
        </StackPanel>
        <StackPanel Grid.Row="1"
                    Margin="10,10,10,10">
            <TextBlock Style="{StaticResource MaterialDesignHeadline4TextBlock}"
                       Text="Algorithms Used in This Project" />
            <TextBlock Margin="20,0,0,10"
                       Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                       Text="# A* search algorithm" />
            <TextBlock Margin="40,0,0,20"
                       Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                       Text="   A star is a graph traversal and path search algorithm, which is often used in many fields of computer science due to its completeness, optimality, and optimal efficiency. One major practical drawback is its space complexity, as it stores all generated nodes in memory. Thus, in practical travel-routing systems, it is generally outperformed by algorithms which can pre-process the graph to attain better performance, as well as memory-bounded approaches; however, A* is still the best solution in many cases."
                       TextWrapping="WrapWithOverflow" />
            <TextBlock Margin="20,0,0,10"
                       Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                       Text="# Recursive Division algorithm " />
            <TextBlock Margin="40,0,0,10"
                       Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                       Text="   Mazes can be created with recursive division, an algorithm which works as follows: Begin with the maze's space with no walls. Call this a chamber. Divide the chamber with a randomly positioned wall (or multiple walls) where each wall contains a randomly positioned passage opening within it. Then recursively repeat the process on the subchambers until all chambers are minimum sized. This method results in mazes with long straight walls crossing their space, making it easier to see which areas to avoid."
                       TextWrapping="WrapWithOverflow" />
        </StackPanel>
    </Grid>
</UserControl>
